{"ast":null,"code":"var _jsxFileName = \"/Users/lakshansomapala/Desktop/Test Projects/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n\n  componentDidMount() {\n    // when react renders first time this will occuer. this happens only onces.\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => console.log(users));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map(monsters => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monsters.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, monsters.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","console","log","render","map","name","id"],"sources":["/Users/lakshansomapala/Desktop/Test Projects/monsters-rolodex/src/App.js"],"sourcesContent":["import { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n    };\n  }\n  componentDidMount() { // when react renders first time this will occuer. this happens only onces.\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => console.log(users))\n  } \n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.monsters.map((monsters) => {\n          return (\n          <div key={monsters.id}>\n            <h1>{monsters.name}</h1>\n          </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAC1BG,WAAW,GAAG;IACZ;IAEA,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAE;IADC,CAAb;EAGD;;EACDC,iBAAiB,GAAG;IAAE;IACpBC,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFnB;EAGD;;EAEDG,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,UACG,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAyBV,QAAD,IAAc;QACrC,oBACA;UAAA,uBACE;YAAA,UAAKA,QAAQ,CAACW;UAAd;YAAA;YAAA;YAAA;UAAA;QADF,GAAUX,QAAQ,CAACY,EAAnB;UAAA;UAAA;UAAA;QAAA,QADA;MAKD,CANA;IADH;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;;AA1ByB;;AA6B5B,eAAef,GAAf"},"metadata":{},"sourceType":"module"}